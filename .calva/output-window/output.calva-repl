; This is the Calva evaluation results output window.
; TIPS: The keyboard shortcut `ctrl+alt+o o` shows and focuses this window
;   when connected to a REPL session.
; Please see https://calva.io/output/ for more info.
; Happy coding! ♥️

; Jacking in...
; Connecting using "Leiningen" project type.
; You can make Calva auto-select this.
;   - See https://calva.io/connect-sequences/
; 
; Starting Jack-in Terminal: pushd /home/pedro/dev/projects/clojure/category-theory ; lein update-in :dependencies conj '[nrepl,"1.0.0"]' -- update-in :plugins conj '[cider/cider-nrepl,"0.28.5"]' -- update-in '[:repl-options,:nrepl-middleware]' conj '["cider.nrepl/cider-middleware"]' -- repl :headless ; popd
; Using host:port 127.0.0.1:35539 ...
; Hooking up nREPL sessions ...
; Connected session: clj
; TIPS:
;   - You can edit the contents here. Use it as a REPL if you like.
;   - `alt+enter` evaluates the current top level form.
;   - `ctrl+enter` evaluates the current form.
;   - `alt+up` and `alt+down` traverse up and down the REPL command history
;      when the cursor is after the last contents at the prompt
;   - Clojure lines in stack traces are peekable and clickable.
; Evaluating code from settings: 'calva.autoEvaluateCode.onConnect.clj'
nil
clj꞉category-theory.core꞉>  ; Use `alt+enter` to evaluate
clj꞉category-theory.core꞉> 
; Jack-in done.
clj꞉category-theory.core꞉> 
(in-ns 'category-theory.monad)
#namespace[category-theory.monad]
clj꞉category-theory.monad꞉> 
; Syntax error compiling at (src/category_theory/monad.clj:3:1).
; Unable to resolve symbol: defn in this context
clj꞉category-theory.monad꞉> 
; Syntax error compiling at (src/category_theory/monad.clj:6:1).
; Unable to resolve symbol: defn in this context
clj꞉category-theory.monad꞉> 
nil
clj꞉category-theory.monad꞉> 
#'category-theory.monad/maybe
clj꞉category-theory.monad꞉> 
#'category-theory.monad/bind
clj꞉category-theory.monad꞉> 
(def teste (maybe 5))
#'category-theory.monad/teste
clj꞉category-theory.monad꞉> 
(class teste)
category_theory.monad$maybe$fn__8084
clj꞉category-theory.monad꞉> 
